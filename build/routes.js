"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.router = void 0;
const express_1 = require("express");
const CreateUserController_1 = require("./controller/CreateUserController");
const CreateTagController_1 = require("./controller/CreateTagController");
const ensureAdmin_1 = require("./middlewares/ensureAdmin");
const AuthenticateUserController_1 = require("./controller/AuthenticateUserController");
const CreateComplimentController_1 = require("./controller/CreateComplimentController");
const ensureAuthenticated_1 = require("./middlewares/ensureAuthenticated");
const ListUserSendComplimentsController_1 = require("./controller/ListUserSendComplimentsController");
const ListUserReceiveComplimentsController_1 = require("./controller/ListUserReceiveComplimentsController");
const ListTagsController_1 = require("./controller/ListTagsController");
const ListUsersController_1 = require("./controller/ListUsersController");
const router = express_1.Router();
exports.router = router;
const createUserController = new CreateUserController_1.CreateUserController();
const createTagController = new CreateTagController_1.CreateTagController();
const authenticateUserController = new AuthenticateUserController_1.AuthenticateUserController();
const createComplimentController = new CreateComplimentController_1.CreateComplimentController();
const listUserSendComplimentsController = new ListUserSendComplimentsController_1.ListUserSendComplimentsController();
const listUserReceiveComplimentsController = new ListUserReceiveComplimentsController_1.ListUserReceiveComplimentsController();
const listTagsController = new ListTagsController_1.ListTagsController();
const listUsersController = new ListUsersController_1.ListUsersController();
router.post("/tags", ensureAuthenticated_1.ensureAuthenticated, ensureAdmin_1.ensureAdmin, createTagController.handle);
router.get("/tags", ensureAuthenticated_1.ensureAuthenticated, listTagsController.handle);
router.post("/users", createUserController.handle);
router.post("/login", authenticateUserController.handle);
router.post("/compliments", ensureAuthenticated_1.ensureAuthenticated, createComplimentController.handle);
router.get("/users/compliments/send", ensureAuthenticated_1.ensureAuthenticated, listUserSendComplimentsController.handle);
router.get("/users/compliments/receive", ensureAuthenticated_1.ensureAuthenticated, listUserReceiveComplimentsController.handle);
router.get("/users", ensureAuthenticated_1.ensureAuthenticated, listUsersController.handle);
